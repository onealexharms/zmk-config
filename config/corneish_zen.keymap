/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
* Modified by Alex Harms 24 February 2023
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

// Stuff from the tin above, my keymap below - AH

// Alex's Layers // Layer definitions must remain in this order within the keymap because decisions were made. Sigh.   
#define ALPHA 0
#define _TO_ALPHA_ &to ALPHA
#define NUMBER 1
#define SYMBOL 2
#define PARENS 3
#define NAVIGATION 4 

// names to make the keymap easier to read
#define ___ENTER__ &kp ENTER
#define ___SPACE__ &kp SPACE
#define ___TAB____ &kp TAB
#define __COMMA___ &kp COMMA
#define __PERIOD__ &kp PERIOD
#define __TILDE___ &kp TILDE
#define __GRAVE___ &kp GRAVE
#define __CARET___ &kp CARET
#define _AT_SIGN__ &kp AT_SIGN
#define ___BANG___ &kp EXCLAMATION
#define ___HASH___ &kp HASH
#define _BACKSLASH &kp BACKSLASH
#define ___PIPE___ &kp PIPE
#define __DOLLAR__ &kp DOLLAR
#define _PERCENT__ &kp PERCENT
#define __SLASH___ &kp SLASH
#define ___PLUS___ &kp KP_PLUS
#define __MINUS___ &kp KP_MINUS
#define _ASTERISK_ &kp ASTERISK
#define __EQUALS__ &kp EQUAL
#define _AMPERSAND &kp AMPERSAND
#define SEMICOLON_ &kp SEMICOLON
#define _UNDERLINE &kp UNDERSCORE
#define _L_SHIFT__ &kp LEFT_SHIFT 
#define _R_SHIFT__ &kp RIGHT_SHIFT
#define _CAPSLOCK_ &kp CAPSLOCK
#define CTL_SQUOTE &mt RCTRL SINGLE_QUOTE
#define CTL_BAKTAB &mt LCTRL LS(TAB)
#define _CMD_TAB__ &mt LCMD TAB
#define CMD_BKSPCE &mt RCMD BSPC
#define _L_ALT_ESC &mt LALT ESC
#define _R_ALT_ESC &mt RALT ESC  
  
#define _L_PAREN__ &kp LEFT_PARENTHESIS
#define _R_PAREN__ &kp RIGHT_PARENTHESIS
#define _L_BRACKET &kp LEFT_BRACKET
#define _R_BRACKET &kp RIGHT_BRACKET
#define _L_CURLY__ &kp LEFT_BRACE
#define _R_CURLY__ &kp RIGHT_BRACE
#define _L_ANGLE__ &kp LESS_THAN
#define _R_ANGLE__ &kp GREATER_THAN

#define ___LEFT___ &kp LEFT
#define __RIGHT___ &kp RIGHT
#define ____UP____ &kp UP
#define ___DOWN___ &kp DOWN

//nice numbers & letters
#define ____0_____ &kp KP_NUMBER_0
#define ____1_____ &kp KP_NUMBER_1
#define ____2_____ &kp KP_NUMBER_2
#define ____3_____ &kp KP_NUMBER_3
#define ____4_____ &kp KP_NUMBER_4
#define ____5_____ &kp KP_NUMBER_5
#define ____6_____ &kp KP_NUMBER_6
#define ____7_____ &kp KP_NUMBER_7
#define ____8_____ &kp KP_NUMBER_8
#define ____9_____ &kp KP_NUMBER_9

#define A_________ &kp A
#define B_________ &kp B
#define C_________ &kp C
#define D_NAV_____ &lt NAVIGATION D
#define E_________ &kp E
#define F_SYMBOL__ &lt SYMBOL F
#define G_________ &kp G
#define H_________ &kp H 
#define I_________ &kp I
#define J_PARENS__ &lt PARENS J
#define K_________ &kp K
#define L_________ &kp L
#define M_________ &kp M
#define N_________ &kp N
#define O_________ &kp O
#define P_________ &kp P
#define Q_________ &kp Q
#define R_________ &kp R
#define S_NUM_____ &lt NUMBER S
#define T_________ &kp T
#define U_________ &kp U
#define V_________ &kp V
#define W_________ &kp W
#define X_________ &kp X
#define Y_________ &kp Y
#define Z_________ &kp Z

// and a spacer...
#define _
#define __________ &trans//transparent

/ {
  keymap {
    compatible = "zmk,keymap";

    layer_0 {
      label = "ALPHA";
      bindings = <
    _CAPSLOCK_ Q_________ W_________ E_________ R_________ T_________  Y_________ U_________ I_________ O_________ P_________ __________

    CTL_BAKTAB A_________ S_NUM______ D_NAV_____ F_SYMBOL_ G_________  H_________ J_PARENS__ K_________ L_________ SEMICOLON_ CTL_SQUOTE

    _L_SHIFT__ Z_________ X_________ C_________ V_________ B_________  N_________ M_________ __COMMA___ __PERIOD__ __SLASH___ _R_SHIFT__

                                     _L_ALT_ESC ___ENTER__ _CMD_TAB__  CMD_BKSPCE ___SPACE__ _R_ALT_ESC
      >;
    };

    layer_1 { 
      label = "NUMBER";
      bindings = <
    __________ __________ __________ __________ __________ __________  __EQUALS__ ____7_____ ____8_____ ____9_____ ___ENTER__ __________

    __________ __________ __________ __________ __________ __________  __MINUS___ ____4_____ ____5_____ ____6_____ ___TAB____ _ASTERISK_

    __________ __________ __________ __________ __________ __________  ___PLUS___ ____1_____ ____2_____ ____3_____ __PERIOD__ __SLASH___

                                     __________ __________ __________  __________ ____0_____ __________
      >;
    };

    layer_2 {
      label = "SYMBOL";
      bindings = <

    __________ __________ __________ __________ __________ __________  __EQUALS__ _AMPERSAND _ASTERISK_ ___PIPE___ __TILDE___ __________

    __________ __________ __________ __________ __________ __________  __MINUS___ __DOLLAR__ _PERCENT__ __CARET___ __GRAVE___ CTL_SQUOTE

    __________ __________ __________ __________ __________ __________  _UNDERLINE ___BANG___ _AT_SIGN__ ___HASH___ _BACKSLASH ___PLUS___
    
                                     __________ __________ __________  CMD_BKSPCE ___SPACE__ _R_ALT_ESC
      >; 
    };

    layer_3 {
      label = "PARENS";
      bindings = <

    __________ __________ __________ _L_BRACKET _R_BRACKET __________  __________ __________ __________ __________ __________ __________

    __________ __________ _L_ANGLE__ _L_PAREN__ _R_PAREN__ _R_ANGLE__  __________ __________ __________ __________ __________ __________

    __________ __________ __________ _L_CURLY__ _R_CURLY__ __________  __________ __________ __________ __________ __________ __________
    
                                     __________ __________ __________  __________ __________ __________
      >; 
    };

    layer_4 {
      label = "NAVIGATION";
      bindings = <

    __________ __________ __________ __________ __________ __________  __________ __________ __________ __________ __________ __________

    __________ __________ __________ __________ __________ __________  ___LEFT___ ___DOWN___ ____UP____ __RIGHT___ __________ __________

    __________ __________ __________ __________ __________ __________  __________ __________ __________ __________ __________ __________
    
                                     __________ __________ __________  __________ __________ __________
      >; 
    };
  };
};
